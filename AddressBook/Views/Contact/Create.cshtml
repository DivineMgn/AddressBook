@model AddressBook.Models.Contact

@{ ViewBag.Title = "Создание нового контакта"; } 

<div class="page-header">
	<h2>@ViewBag.Title</h2>
	@Html.ActionLink(
		linkText: "На главную",
		actionName: "Index",
		controllerName: "Contact",
		routeValues: null,
		htmlAttributes: new { @class = "btn btn-outline-primary my-2" })
</div>


@using (Html.BeginForm("Create", "Contact", FormMethod.Post))
{
	<div class="form-group">
		@Html.LabelFor(m => m.Email)
		@Html.TextBoxFor(m => m.Email, new
		{
			@class = "form-control" + (ViewData.ModelState.IsValidField(Html.NameFor(m => m.Email).ToString()) ? "" : " is-invalid"),
			@placeholder = "Введите адрес электронной почты",
			@type = "email"
		})
		@Html.ValidationMessageFor(m => m.Email, null, new { @class = "invalid-feedback" }, "div")
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.LastName)
		@Html.TextBoxFor(m => m.LastName, new
		{
			@class = "form-control" + (ViewData.ModelState.IsValidField(Html.NameFor(m => m.LastName).ToString()) ? "" : " is-invalid"),
			@placeholder = "Введите фамилию"
		})
		@Html.ValidationMessageFor(m => m.LastName, null, new { @class = "invalid-feedback" }, "div")
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.FirstName)
		@Html.TextBoxFor(m => m.FirstName, new {
			@class = "form-control" + (ViewData.ModelState.IsValidField(Html.NameFor(m => m.FirstName).ToString()) ? "" : " is-invalid"),
			@placeholder = "Введите имя"
		})
		@Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "invalid-feedback" }, "div")
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.SecondName)
		@Html.TextBoxFor(m => m.SecondName, new {
			@class = "form-control" + (ViewData.ModelState.IsValidField(Html.NameFor(m => m.SecondName).ToString()) ? "" : " is-invalid"),
			@placeholder = "Введите отчество"
		})
		@Html.ValidationMessageFor(m => m.SecondName, null, new { @class = "invalid-feedback" }, "div")
	</div>

	<button type="submit" class="btn btn-outline-primary">Сохранить</button>
}